import Validator from '@microfleet/validation';
import ajv from 'ajv';
import { Microfleet } from '../';
/**
 * Validator configuration, more details in
 * https://github.com/microfleet/validation
 */
export declare type ValidatorConfig = string[] | void | {
    filter: (filename: string) => boolean;
    schemas: string[];
    ajv: ajv.Options;
};
/**
 * Plugin name
 */
export declare const name = "validator";
/**
 * Defines service extension
 */
export interface ValidatorPlugin {
    [name]: Validator;
    validate: Validator['validate'];
    validateSync: Validator['validateSync'];
    ifError: Validator['ifError'];
}
/**
 * Plugin Type
 */
export declare const type: "essential";
/**
 * Relative priority inside the same plugin group type
 */
export declare const priority = 0;
/**
 * Attaches initialized validator based on conf.
 * Provides `validate` and `validateSync` methods.
 * @param conf - Validator Configuration Object.
 * @param parentFile - From which file this plugin was invoked.
 */
export declare const attach: (this: Microfleet, conf: ValidatorConfig, parentFile: string) => void;
